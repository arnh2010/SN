{"version":3,"sources":["Components/Header/HeaderContainer.module.css","Components/NavBar/NavBar.module.css","Components/Dialogs/Dialogs.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","reportWebVitals.js","API/API.jsx","Redux/AuthReducer.js","Redux/MessageReducer.js","Redux/ProfileReducer.js","Redux/UsersReducer.js","Redux/StoreRedux.js","Components/NavBar/NavBar.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","assets/Img/Loader.gif","assets/Img/avatar.png","Components/Profile/ProfileInfo/ProfileInfoStatus.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","hoc/withAuthRedirect.jsx","Components/Profile/ProfileInfo/ProfileInfoContainer.jsx","Components/Profile/Profile.jsx","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx","Components/Users/Pages.jsx","Components/Users/Users.jsx","Components/Users/UsersAPIcontainer.jsx","Components/Users/UsersContainer.jsx","Components/Header/Header.jsx","Components/Header/HeaderContainer.jsx","Utils/Validators/validators.js","Components/Common/FormControls/FormsControl.js","Components/Login/Login.jsx","App.js","index.js","Components/Users/Pages.module.css","Components/Users/Users.module.css","Components/Header/Header.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","baseURL","withCredentials","headers","HeaderAPI","userId","console","log","ProfileAPI","getUserProfile","pageSize","currentPage","get","Response","data","post","delete","getUserStatus","putUserStatus","status","put","AuthAPI","email","password","rememberMe","resultCode","SET_AUTH_USERS_DATA","SET_AVATAR","InitialState","id","login","isLogin","avatar","SetAuthUsersData","type","Data","getAuth","dispatch","AvatarURL","photos","small","AuthReducer","state","action","ADD_MESSAGE","TEXT_CHANGE","dialogs","name","messages","message","MessageReduser","StateCopy","push","massegeText","text","ADD_POST","POST_TEXT_CHANGE","SET_USER_PROFILE","SET_USER_STATUS","posts","likeCount","NewPostText","usersProfiles","Status","setUserStatus","userStatus","ProfileReduser","newPost","userProfile","ADD_USERS","FOLLOW","UNFOLLOW","SET_USER","SET_TOTAL_USER_COUNT","SET_CURRENT_PAGE","SET_NUM_OF_PAGE","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRES","Users","totalUserCount","numOfPages","isFetching","isFollowingProgress","FollowAC","UserId","UnfollowAC","SetUserCreator","SetTotalUserCountAC","UserCount","ToggleIsFetchingAC","fetching","ToggleIsFollowingProgressAC","UserID","UsersReducer","map","u","followed","CurrentPage","includes","filter","reducers","combineReducers","ProfilePage","ProfileReducer","MessagePage","MessageReducer","UsersPage","AuthPage","Store","createStore","applyMiddleware","thunkMiddleware","Window","NavBar","className","s","nav","item","navData","isActive","active","to","Post","Props","src","MyPosts","PostElements","Posts","m","PostText","newPostElement","React","createRef","PostsBlock","value","onChange","current","PostChange","ref","cols","rows","onClick","addPost","MyPostsContainer","connect","PostTextChangeCreator","ProfileInfoStatus","isStatusRedacting","StatusText","props","statusRedactorOn","setState","statusRedactorOff","e","currentTarget","onStatusChange","prevProps","prevState","this","onDoubleClick","autoFocus","onBlur","Component","ProfileInfo","undefined","DesriptionBlock","fullName","description","aboutMe","large","defultAvatar","job","lookingForAJob","lookingForAJobDescription","contacts","vk","twitter","facebook","website","instagram","youtube","github","mainLink","loader","Loader","mapStateToPropsForRedirect","withAuthRedirect","RedirectComponent","ProfileInfoContainer","match","params","Id","myID","compose","Profile","useMatch","DialogItem","dialog","Message","SendMessage","initialValues","onSubmit","values","send","errors","touched","validate","placeholder","Dialogs","dialogsElements","d","MessageElements","dialogItem","messeges","onSend","DialogsContainer","onChangeText","TextChangeCreator","messageText","Pages","PagesCountMax","Math","ceil","PagesCount","page","i","pageNum","SetNumOfPage","getUsers","SelectPage","User","uniqueUrlName","photosLarge","img","buttonFollow","disabled","getFollow","buttonUnFollow","getUnfollow","UsersAPIcontainer","Page","getUsersThunkCreator","SetCurrentPage","photosSmall","onFollowClick","onFollow","onUnfollowClick","onUnfollow","ToggleIsFollowingProgress","ToggleIsFetching","withRedirectComponent","UsersContainer","SetUsers","SetTotalUserCount","TotalUserCount","SetCurrentPageAC","SetNumOfPageAC","items","totalCount","response","Header","header","Authorize","Logout","HeaderContainer","Required","Input","field","form","LoginForm","submitProps","getLogin","setStatus","resetForm","validationSchema","yup","required","min","max","component","error","App","path","element","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.0ea1595d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"HeaderContainer_header__13XNg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__2fK7l\",\"item\":\"NavBar_item__EsxvI\",\"active\":\"NavBar_active__nEjQQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3fufj\",\"dialog\":\"Dialogs_dialog__TgTQ3\",\"active\":\"Dialogs_active__208Xw\",\"messeges\":\"Dialogs_messeges__yDoo5\",\"dialogItem\":\"Dialogs_dialogItem__3-5qu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ProfileInfo_image__2tEtJ\",\"loader\":\"ProfileInfo_loader__3ls-t\",\"DesriptionBlock\":\"ProfileInfo_DesriptionBlock__2RmLz\",\"name\":\"ProfileInfo_name__2da4B\",\"description\":\"ProfileInfo_description__29II6\",\"avatar\":\"ProfileInfo_avatar__3oRbT\",\"contacts\":\"ProfileInfo_contacts__2TW40\",\"job\":\"ProfileInfo_job__3x9qx\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as axios from \"axios\"\r\nimport React from \"react\"\r\n\r\nconst instance = axios.create(\r\n  {\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: { \"API-KEY\": \"bbc049c5-60df-4119-be10-b4024f8dc7d2\" }\r\n  })\r\n\r\nexport const HeaderAPI = {\r\n  getUserProfile(userId) {\r\n    console.log('нужна другая фция')\r\n    return ProfileAPI.getUserProfile(userId)\r\n     },\r\n\r\n  getUsers(pageSize, currentPage) {\r\n    return instance.get(`users?count=${pageSize}&page=${currentPage}`)\r\n      .then(Response => {\r\n        return (Response.data)\r\n      }\r\n      )\r\n  },\r\n\r\n  postFollow(userId) {\r\n    return instance.post(`/follow/${userId}`)\r\n      .then(Response => {\r\n        return (Response.data)\r\n      }\r\n      )\r\n  },\r\n\r\n  deleteFollow(userId) {\r\n    return instance.delete(`/follow/${userId}`)\r\n      .then(Response => {\r\n        return (Response.data)\r\n      }\r\n      )\r\n  }\r\n}\r\n\r\nexport const ProfileAPI = {\r\n  getUserProfile(userId) {\r\n    return instance.get('profile/' + userId)\r\n      .then(Response => {\r\n        return (Response.data)\r\n      }\r\n      )\r\n  },\r\n  getUserStatus(userId) {\r\n    return instance.get('profile/status/' + userId)\r\n      .then(Response => {\r\n        return (Response.data)\r\n      }\r\n      )\r\n  },\r\n  putUserStatus(status) {\r\n    return instance.put('profile/status/',{status:status})\r\n  }\r\n}\r\n\r\nexport const AuthAPI = {\r\n  postLogin(email,password,rememberMe) {\r\n    return instance.post('auth/login/',{email:email,password:password,rememberMe:rememberMe} )\r\n      .then(Response => {\r\n        return (Response.data)\r\n      }\r\n      )\r\n  },\r\n\r\n  deleteLogin() {\r\n    return instance.delete('auth/login/')\r\n    .then(Response => {\r\n      return (Response.data)\r\n    }\r\n    )\r\n},\r\n  \r\n  getAuth() {\r\n    return instance.get('auth/me')\r\n    .then(Response =>{\r\n      if (Response.data.resultCode === 0) {\r\n        return (Response.data.data)}})\r\n        }\r\n}\r\n\r\n","import { AuthAPI,HeaderAPI } from \"../API/API\"\r\n\r\nconst SET_AUTH_USERS_DATA = 'SET-AUTH-USERS-DATA'\r\nconst SET_AVATAR = 'SET-AVATAR'\r\n\r\nlet InitialState = {\r\n  email: null,\r\n  id: null,\r\n  login: null,\r\n  isLogin: false,\r\n  avatar: null,\r\n}\r\n\r\nlet AuthReducer = (state = InitialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case SET_AUTH_USERS_DATA: {\r\n      // return { ...state, email:action.Data.email,id:action.Data.id,login: action.Data.login,isLogin:true }\r\n      return { ...state, ...action.Data }\r\n    }\r\n\r\n    case SET_AVATAR: {\r\n      return { ...state, avatar: action.AvatarURL }\r\n    }\r\n\r\n       default: return state\r\n  }\r\n}\r\n\r\nexport const SetAvatar = (AvatarURL) => {\r\n  return { type: SET_AVATAR, AvatarURL: AvatarURL }\r\n}\r\n\r\nexport const SetAuthUsersData = (email, id, login, isLogin) => {\r\n  return { type: SET_AUTH_USERS_DATA, Data: { email: email, id: id, login: login, isLogin:isLogin } }\r\n}\r\n\r\nexport const getAuth =()=>{\r\nreturn(dispatch)=>{\r\nAuthAPI.getAuth().then(Response => {\r\n  if (Response){\r\n  dispatch(SetAuthUsersData(Response.email, Response.id, Response.login,true))}})\r\n  HeaderAPI.getUserProfile(2).then(Response => {\r\n  dispatch(SetAvatar(Response.photos.small))})\r\n}}\r\n\r\nexport const getLogin =(email,password,rememberMe,setStatus)=>{\r\nreturn (dispatch)=>{\r\n  AuthAPI.postLogin(email,password,rememberMe).then(Response => {\r\n    if (Response.resultCode===0){\r\n          dispatch( getAuth())\r\n    }\r\n   else{\r\n     setStatus({error:Response.messages})\r\n     }\r\n})\r\n}\r\n}\r\n\r\nexport const Logout =()=>{\r\n  return (dispatch)=>{    \r\n    AuthAPI.deleteLogin().then(Response => {\r\n      \r\n      if (Response.resultCode===0){\r\n    dispatch(SetAuthUsersData(\"\", \"\",\"\",false))\r\n  }\r\n})\r\n}\r\n}\r\n\r\nexport default AuthReducer","const ADD_MESSAGE = 'ADD-MESSAGE'\r\nconst TEXT_CHANGE = 'TEXT-CHANGE'\r\n\r\nlet InitialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'dima' },\r\n        { id: 2, name: 'pima' },\r\n        { id: 3, name: 'Mima' }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'sssss' },\r\n        { id: 2, message: 'sss1212' },\r\n        { id: 3, message: 'de2edd' }\r\n    ]\r\n\r\n}\r\n\r\n\r\nlet MessageReduser = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            {\r\n             let StateCopy = { ...state }\r\n             StateCopy.messages = [...state.messages]\r\n             StateCopy.messages.push({id: 6, message: action.massegeText})\r\n             return StateCopy\r\n             }\r\n\r\n            case TEXT_CHANGE:\r\n            {\r\n                let StateCopy = { ...state }\r\n\r\n                StateCopy.massegeText = action.text\r\n                return StateCopy\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const AddMessageAC = (massegeText) => {\r\n    return { type: ADD_MESSAGE,massegeText }\r\n}\r\n\r\nexport const TextChangeCreator = (text) => {\r\n    return { type: TEXT_CHANGE, text: text }\r\n}\r\n\r\nexport default MessageReduser","import { ProfileAPI } from \"../API/API\"\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst POST_TEXT_CHANGE = 'POST-TEXT-CHANGE'\r\n\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE'\r\nconst SET_USER_STATUS = 'SET-USER-STATUS'\r\n\r\n\r\nlet InitialState = {\r\n         posts:[\r\n         {id:1,text:'133ere',likeCount:21 },\r\n         {id:2,text:'233ere',likeCount:21 },\r\n         {id:3,text:'333ere',likeCount:21 }\r\n         ],\r\n         NewPostText:[''],\r\n         usersProfiles:[],\r\n         Status:\"\"\r\n        }\r\n\r\nlet ProfileReduser =(state=InitialState,action)=>{\r\n    \r\nswitch (action.type){\r\ncase ADD_POST: \r\n    {\r\nlet newPost= {id:9,text:state.NewPostText,likeCount:0 }\r\nlet StateCopy={...state}\r\nStateCopy.posts=[...state.posts]\r\n\r\nStateCopy.posts.push(newPost)\r\nStateCopy.NewPostText=''\r\nreturn StateCopy\r\n    }\r\ncase POST_TEXT_CHANGE:\r\n{\r\nlet StateCopy={...state}\r\nStateCopy.NewPostText=action.text\r\nreturn StateCopy\r\n}\r\n\r\ncase SET_USER_PROFILE:\r\n{return { ...state, usersProfiles:[action.userProfile]}}\r\n\r\ncase SET_USER_STATUS:\r\n{return { ...state, Status:action.userStatus}}\r\n\r\ndefault: return state\r\n}}\r\n\r\nexport const AddPostCreator=()=> {\r\nreturn  {type:ADD_POST}}\r\n\r\nexport const PostTextChangeCreator=(text)=> {\r\nreturn  {type:POST_TEXT_CHANGE,text:text}}\r\n\r\nexport const setUserProfile = (userProfile) => {\r\n        return { type: SET_USER_PROFILE,userProfile }\r\n  }\r\n\r\nexport const setUserStatus = (userStatus) => {\r\n    return { type: SET_USER_STATUS,userStatus}\r\n}\r\n\r\nexport const getUserProfile =(userId)=>{\r\nreturn (dispatch)=>{\r\n    ProfileAPI.getUserProfile(userId).then(Response => { \r\n    dispatch(setUserProfile(Response)) })\r\n}}\r\n\r\nexport const getUserStatus =(userId)=>{\r\n    return (dispatch)=>{\r\n        ProfileAPI.getUserStatus(userId).then(Response => { \r\n        dispatch(setUserStatus(Response)) })\r\n    }}\r\n\r\nexport const putUserStatus =(status)=>{\r\n    return (dispatch)=>{\r\n        ProfileAPI.putUserStatus(status).then(Response => {\r\n            debugger\r\n            if (Response.data.resultCode===0){\r\n             dispatch(setUserStatus(status))} })\r\n         }}\r\n\r\n\r\nexport default ProfileReduser","import { HeaderAPI } from \"../API/API\"\r\n\r\nconst ADD_USERS = 'ADD-USERS'\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USER = 'SET-USER'\r\n\r\nconst SET_TOTAL_USER_COUNT = 'SET-TOTAL-USER-COUNT'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\n\r\nconst SET_NUM_OF_PAGE= 'SET-NUM-OF-PAGE'\r\n\r\nconst TOGGLE_IS_FETCHING= 'TOGGLE-IS-FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRES= 'TOGGLE-IS-FOLLOWING-PROGRES'\r\n\r\n\r\n\r\nlet InitialState = {\r\n  Users: [],\r\n  pageSize:5,\r\n  totalUserCount:0,\r\n  currentPage:1,\r\n  numOfPages:1,\r\n  isFetching:false,\r\n  isFollowingProgress:[]\r\n}\r\n\r\nlet UsersReducer = (state = InitialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case ADD_USERS: {\r\n      let newPost = { id: 9, text: state.NewPostText, likeCount: 0 }\r\n      let StateCopy = { ...state }\r\n      StateCopy.posts = [...state.posts]\r\n      StateCopy.posts.push(newPost)\r\n      StateCopy.NewPostText = ''\r\n      return StateCopy\r\n    }\r\n\r\n    case FOLLOW: {\r\n\r\n      let StateCopy = {\r\n        ...state,\r\n        Users: state.Users.map(u => {\r\n          if (u.id === action.UserId) {return { ...u, followed: true } }\r\n          return u\r\n        })\r\n      }\r\n      return StateCopy\r\n    }\r\n\r\n    case UNFOLLOW: {\r\n      let StateCopy = {\r\n        ...state,\r\n        Users: state.Users.map(u => {\r\n          if (u.id === action.UserId) { return { ...u, followed: false } }\r\n          return u\r\n        })\r\n      }\r\n      return StateCopy\r\n    }\r\n\r\n    case SET_USER: {\r\n      // let StateCopy={...state}\r\n      // StateCopy.Users=[...state.Users]\r\n      // StateCopy.Users=[...state.Users,...action.Users]\r\n      //   return StateCopy\r\n      return { ...state, Users: action.Users }\r\n    }\r\n\r\ncase SET_TOTAL_USER_COUNT: {\r\nreturn { ...state, totalUserCount:action.UserCount }}\r\n\r\ncase SET_CURRENT_PAGE: {\r\n    return {...state, currentPage:action.CurrentPage}\r\n }\r\n\r\n case SET_NUM_OF_PAGE: {\r\n  return {...state, numOfPages:action.CurrentPage}\r\n}\r\n\r\ncase TOGGLE_IS_FETCHING: {\r\n  return {...state, isFetching:action.fetching}\r\n}\r\n\r\ncase TOGGLE_IS_FOLLOWING_PROGRES: {\r\n  \r\n  console.log(state)\r\n\r\n  if(state.isFollowingProgress.includes(action.UserID)) {\r\n    \r\n   return {\r\n    ...state,isFollowingProgress:[...state.isFollowingProgress.filter(id=>{\r\n    if (id != action.UserID){return id}})]\r\n    // // isFollowingProgress: state.isFollowingProgress.map(u => {\r\n    // //   if (u.id != action.UserId) { return { ...u } }\r\n    // //   return {u }\r\n    // })\r\n  }\r\n}\r\nelse{return {...state,isFollowingProgress:[...state.isFollowingProgress,action.UserID]}}\r\n}\r\n \r\n    default: return state\r\n  }\r\n}\r\n\r\nexport const AddUserAC = () => {\r\n  return { type: ADD_USERS }\r\n}\r\n\r\nexport const FollowAC = (UserId) => {\r\n  return { type: FOLLOW, UserId: UserId }\r\n}\r\n\r\nexport const UnfollowAC = (UserId) => {\r\n  return { type: UNFOLLOW, UserId: UserId }\r\n}\r\n\r\nexport const SetUserCreator = (Users) => {\r\n  return { type: SET_USER, Users: Users }\r\n}\r\n\r\nexport const SetTotalUserCountAC = (UserCount) => {\r\n  return { type: SET_TOTAL_USER_COUNT, UserCount }\r\n}\r\n\r\nexport const SetCurrentPageAC = (CurrentPage) => {\r\n  return { type: SET_CURRENT_PAGE, CurrentPage }\r\n}\r\n\r\nexport const SetNumOfPageAC = (CurrentPage) => {\r\n  return { type: SET_NUM_OF_PAGE, CurrentPage }\r\n}\r\n\r\nexport const ToggleIsFetchingAC = (fetching) => {\r\n  return { type: TOGGLE_IS_FETCHING,fetching}\r\n}\r\n\r\nexport const ToggleIsFollowingProgressAC = (UserID) => {\r\n  return { type: TOGGLE_IS_FOLLOWING_PROGRES,UserID }\r\n}\r\n\r\nexport const getUsersThunkCreator=(pageSize, currentPage)=>{\r\n\r\n  return (dispatch)=>{\r\ndispatch(ToggleIsFetchingAC(false))\r\nHeaderAPI.getUsers(pageSize, currentPage)\r\n.then(Response => {\r\ndispatch(SetUserCreator(Response.items))\r\ndispatch(SetTotalUserCountAC(Response.totalCount))\r\ndispatch(ToggleIsFetchingAC(true))})\r\n}}\r\n\r\nexport const getFollow=(UserID)=>{\r\nreturn (dispatch)=>{\r\n  dispatch(ToggleIsFollowingProgressAC(UserID))\r\n          \r\nHeaderAPI.postFollow(UserID).then(response=>{\r\nif (response.resultCode===0){\r\n  dispatch(FollowAC(UserID)) \r\n  dispatch(ToggleIsFollowingProgressAC(UserID))\r\n}})\r\n}}\r\n\r\nexport const getUnfollow=(UserID)=>{\r\n  return (dispatch)=>{\r\n    dispatch(ToggleIsFollowingProgressAC(UserID))\r\n    HeaderAPI.deleteFollow(UserID).then(response=>{\r\n    if (response.resultCode===0){ dispatch(UnfollowAC(UserID))\r\n    dispatch(ToggleIsFollowingProgressAC(UserID))\r\n    }})\r\n  }}\r\n\r\nexport default UsersReducer","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport AuthReducer from './AuthReducer';\r\nimport MessageReducer from './MessageReducer';\r\nimport ProfileReducer from './ProfileReducer';\r\nimport UsersReducer from './UsersReducer';\r\nimport thunkMiddleware from \"redux-thunk\"\r\n\r\nlet reducers = combineReducers({\r\n       ProfilePage:ProfileReducer, \r\n       MessagePage:MessageReducer,\r\n       UsersPage: UsersReducer,\r\n       AuthPage: AuthReducer\r\n})\r\n\r\nlet Store=createStore(reducers,applyMiddleware(thunkMiddleware));\r\n\r\nWindow.Store=Store\r\n\r\nexport default Store","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './NavBar.module.css';\r\n\r\nconst NavBar =()=>{\r\nreturn<div className = {s.nav}>\r\n    <div className = {s.item}>\r\n    <NavLink className = { navData => navData.isActive ? s.active : s.item }  to ='/Profile'>Profile</NavLink> \r\n    </div>\r\n    <div className = {s.item}>\r\n    <NavLink className = { navData => navData.isActive ? s.active : s.item }  to ='/Users'>Users</NavLink> \r\n    </div>\r\n    <div className = {s.item}>\r\n    <NavLink className = { navData => navData.isActive ? s.active : s.item }  to ='/Messages'>Messages</NavLink>\r\n    </div>\r\n    <div className = {s.item}>\r\n    <NavLink className = { navData => navData.isActive ? s.active : s.item }  to ='/News'>News</NavLink>\r\n    </div>\r\n    <div className = {s.item}>\r\n    <NavLink className = { navData => navData.isActive ? s.active : s.item } to ='/Musik' >Musik</NavLink>\r\n    </div>\r\n</div>\r\n}\r\nexport default NavBar","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post =(Props)=>{\r\nreturn (\r\n<div>\r\n<div className={s.item}>\r\n<img src=\"https://klike.net/uploads/posts/2019-03/1551511801_1.jpg\"></img>\r\n</div>\r\n<div>{Props.text}</div>\r\n<div>Like {Props.likeCount}</div>\r\n</div>)\r\n}\r\nexport default Post","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post'\r\n\r\n\r\n\r\nconst MyPosts =(Props)=>{\r\n    let PostElements =Props.Posts.map (m=><Post text={m.text} likeCount={m.likeCount} />)\r\n    let PostText = Props.PostText\r\n    \r\n    let PostChange=()=>{\r\n      let  text=newPostElement.current.value\r\n      Props.PostChange(text)}\r\n\r\n    let newPostElement =React.createRef()\r\n    let addPost = ()=>{Props.addPost()}\r\n\r\nreturn (\r\n<div>\r\n<div className= {s.PostsBlock}>\r\n<h3>My posts</h3>\r\n</div>\r\n<div>\r\n<textarea value={PostText} onChange={PostChange} ref={newPostElement} cols=\"50\" rows=\"5\"></textarea>\r\n</div>\r\n<div>\r\n<button onClick={addPost}>Add post</button>\r\n</div>\r\n<div className={s.Posts}>\r\n{PostElements}\r\n</div>\r\n</div>\r\n)\r\n}\r\n\r\nexport default MyPosts","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MyPosts from './MyPosts';\r\nimport { AddPostCreator, PostTextChangeCreator } from '../../../Redux/ProfileReducer';\r\n\r\nconst mapStateToProps = (state)=> {\r\n  return ({Posts: state.ProfilePage.posts,  \r\n           PostText: state.ProfilePage.NewPostText})\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>  {\r\n  return {PostChange:(text)=>{\r\n    let action = PostTextChangeCreator(text)\r\n    dispatch(action)},\r\n          addPost:()=>{ dispatch(AddPostCreator())}  }}\r\n\r\nconst MyPostsContainer =connect(mapStateToProps,mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","export default __webpack_public_path__ + \"static/media/Loader.c4cee91c.gif\";","export default __webpack_public_path__ + \"static/media/avatar.0f84f803.png\";","import React from 'react';\r\n\r\nclass ProfileInfoStatus extends React.Component {\r\n   state = {\r\n        isStatusRedacting: false,\r\n        StatusText: this.props.status\r\n    }\r\n\r\n    componentDidUpdate(prevProps,prevState){\r\n        if (prevProps.status !== this.props.status){this.setState({ StatusText:this.props.status })}\r\n        }\r\n\r\n    statusRedactorOn = () => {\r\n        this.setState({ isStatusRedacting: true })\r\n    }\r\n\r\n    statusRedactorOff = (e) => {\r\n        this.setState({ isStatusRedacting: false })\r\n        this.props.putUserStatus(e.currentTarget.value)\r\n    }\r\n\r\n    onStatusChange=(e)=>{\r\n        this.setState({StatusText:e.currentTarget.value})}\r\n            \r\n        render() {\r\n              return (\r\n            <div>\r\n            {!this.state.isStatusRedacting && <div onDoubleClick={this.statusRedactorOn} >Статус: {this.props.status}</div>}\r\n            {this.state.isStatusRedacting && <input autoFocus={true} onBlur={this.statusRedactorOff} onChange={this.onStatusChange} value={this.state.StatusText}/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileInfoStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Loader from '../../../assets/Img/Loader.gif';\r\nimport defultAvatar from '../../../assets/Img/avatar.png';\r\nimport ProfileInfoStatus from './ProfileInfoStatus';\r\n\r\nconst ProfileInfo =(props)=>{\r\n   if (props.userProfile !=  undefined){ \r\n  return(\r\n    <div>\r\n    {/* <div className={s.image}>    \r\n    <img src='https://prostobzor.com/wp-content/gallery/faq-panorama/goty-panorama-4.jpg'></img>\r\n   </div> */}\r\n   <div className={s.DesriptionBlock}>\r\n\r\n<div className={s.name}>\r\n{props.userProfile.fullName}</div>\r\n<div className={s.description} >\r\n<ProfileInfoStatus status={props.userStatus} putUserStatus={props.putUserStatus} />\r\naboutMe: {props.userProfile.aboutMe}\r\n\r\n</div>  \r\n\r\n\r\n\r\n   {(props.userProfile.photos.large === null)\r\n        ? <img className={s.avatar} src={defultAvatar}/>\r\n        : <img className={s.avatar} src= {props.userProfile.photos.large} ></img>}\r\n    <br />\r\n    \r\n    <div className={s.job}>\r\n    Ищу работу:{props.userProfile.lookingForAJob}<br />\r\n    {props.userProfile.lookingForAJobDescription}<br />\r\n    </div>\r\n\r\n    <div className={s.contacts}>\r\n    vk:{props.userProfile.contacts.vk}<br />\r\n    twitter: {props.userProfile.contacts.twitter}<br />\r\n    facebook: {props.userProfile.contacts.facebook}<br />\r\n    website: {props.userProfile.contacts.website}<br />\r\n    instagram: {props.userProfile.contacts.instagram}<br />\r\n    youtube: {props.userProfile.contacts.youtube}<br />\r\n    github: {props.userProfile.contacts.github}<br />\r\n    mainLink: {props.userProfile.contacts.mainLink}<br />\r\n    </div>\r\n\r\n    \r\n\r\n   <br />\r\n   <br />\r\n\r\n    </div>\r\n    </div>\r\n    )}\r\n       else {return(\r\n       <div>\r\n       <img className={s.loader} src={Loader} />\r\n       </div>)\r\n    }}\r\n    export default ProfileInfo;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return ({\r\n        isLogin: state.AuthPage.isLogin\r\n    })\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isLogin) { return <Navigate to=\"/Login\" /> }\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ProfileInfo from './ProfileInfo';\r\nimport { putUserStatus,getUserStatus,getUserProfile } from '../../../Redux/ProfileReducer';\r\nimport Loader from '../../../assets/Img/Loader.gif';\r\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileInfoContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match ? this.props.match.params.Id :  this.props.myID\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n        }\r\n    render() { \r\n                if (this.props.userProfile[0] !=  undefined){ \r\n                    return (\r\n                       <div>\r\n           <ProfileInfo\r\n                    userProfile={this.props.userProfile[0]} \r\n                    userStatus={this.props.Status}\r\n                    putUserStatus={this.props.putUserStatus}\r\n                    />\r\n            </div>)}\r\n             else {return(<div>\r\n                <img  src={Loader} />\r\n                {/* <img className={s.loader} src={Loader} /> */}\r\n               </div>)\r\n            }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        userProfile: state.ProfilePage.usersProfiles,\r\n        isLogin: state.AuthPage.isLogin,\r\n        myID: state.AuthPage.id,\r\n        Status:state.ProfilePage.Status\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { putUserStatus,getUserStatus,getUserProfile }),\r\n    withAuthRedirect\r\n)(ProfileInfoContainer)\r\n\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfoContainer from './ProfileInfo/ProfileInfoContainer';\r\nimport { useMatch } from 'react-router-dom';\r\n\r\nconst Profile = () => {\r\n    const match = useMatch('/Profile/:Id/');\r\n    return <div>\r\n\r\n        <ProfileInfoContainer match={match}/>\r\n        <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst DialogItem =(Props)=>{\r\nreturn(\r\n<div className ={s.dialog + ' ' + s.active}>\r\n<NavLink to ={'/Messages/'+ Props.id}>{Props.name}</NavLink>\r\n</div>)\r\n}\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message =(Props)=>{\r\n    return(\r\n    <div className ={s.dialog}>\r\n    {Props.message}\r\n    </div>\r\n    )\r\n    }\r\n\r\nexport default Message","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Field,Form,Formik } from 'formik';\r\n\r\nconst Dialogs =(Props)=>{\r\n    let dialogsElements =Props.dialogs.map(d=><DialogItem name={d.name} id={d.id}/>)\r\n    let MessageElements =Props.Message.map(m=><Message message={m.message}/>)\r\n   \r\nreturn (\r\n  <div className={s.dialogs}>\r\n<div className={s.dialogItem}>\r\n{dialogsElements}\r\n</div>\r\n<div className ={s.messeges}>\r\n{MessageElements}\r\n</div>\r\n<div>\r\n<SendMessage send={Props.onSend}/>\r\n</div>\r\n</div>\r\n)\r\n}\r\n\r\n  const SendMessage =(props)=> (<Formik initialValues={{ massegeText: '' }} \r\n  onSubmit={values =>{\r\n    props.send(values.massegeText)}}>\r\n  \r\n    {({ errors, touched }) => (\r\n      <Form>\r\n          <Field validate={1} placeholder=\"massege text\" name=\"massegeText\" type=\"span\" />\r\n        <button type=\"Send\">Send</button>\r\n        </Form>)}\r\n  </Formik>)\r\n\r\n\r\n\r\n\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport { AddMessageAC, TextChangeCreator } from '../../Redux/MessageReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state)=> {\r\n  \r\n  return ({dialogs: state.MessagePage.dialogs,  \r\n    Message: state.MessagePage.messages \r\n   })\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>  {\r\n  return {\r\n    onChangeText:(text)=>{\r\n      let action = TextChangeCreator(text)\r\n      dispatch(action)},\r\n    onSend: (messageText)=>{ dispatch(AddMessageAC(messageText)) } }}\r\n          \r\nconst DialogsContainer =connect(mapStateToProps,mapDispatchToProps)(Dialogs)\r\n\r\nexport default DialogsContainer\r\n","import React from 'react';\r\nimport s from './Pages.module.css';\r\n\r\n  const Pages= (props) =>{\r\n    let PagesCountMax= Math.ceil(props.totalUserCount/props.pageSize)\r\n    let PagesCount=props.numOfPages*10-1 \r\n    let page=[]\r\n    for (let i = props.numOfPages*10-9; i <= PagesCount+1; i++) {if(i<PagesCountMax) {page.push(i)}}\r\n       return(\r\n        <div>\r\n  <span className={s.pageNum} onClick={() => {\r\n    if (PagesCount > 10) {\r\n      props.SetNumOfPage(props.numOfPages - 1)\r\n       props.getUsers(PagesCount - 9)\r\n    }\r\n  }}> назад </span>\r\n\r\n  {PagesCount > 10 ?\r\n    <span className={s.pageNum}\r\n      onClick={() => {\r\n        props.SetNumOfPage(1)\r\n        props.getUsers(1)\r\n      }}\r\n    >1 ...</span>\r\n    : \"\"}\r\n\r\n  {page.map(u => { return (<span className={s.pageNum + ' ' + ((u === props.currentPage) ? s.SelectPage : \"\")} onClick={() => { props.getUsers(u) }}>{u}</span>) })}\r\n  <span className={s.pageNum}>...</span>\r\n\r\n  <span className={s.pageNum + ' ' + ((PagesCountMax === props.currentPage) ? s.SelectPage : \"\")} onClick={() => {\r\n    props.SetNumOfPage(Math.ceil(PagesCountMax / 10))\r\n    props.getUsers(PagesCountMax)\r\n  }}>{PagesCountMax}</span>\r\n\r\n  <span className={s.pageNum} onClick={() => {\r\n    if (PagesCountMax > PagesCount+1) {\r\n      props.SetNumOfPage(props.numOfPages + 1)\r\n      props.getUsers(PagesCount + 2)\r\n    }\r\n  }}> дальше </span>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Pages\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Users.module.css';\r\nimport defultAvatar from '../../assets/Img/avatar.png';\r\n\r\nconst User = (props) => {\r\n   return (\r\n    <div>\r\n      <div className={s.name}>{props.name}</div>\r\n      <div>{props.uniqueUrlName}</div>\r\n      <NavLink to ={'/Profile/'+ props.id}>\r\n      {(props.photosLarge === null)\r\n        ? <img className={s.img} src={defultAvatar}></img>\r\n        : <img className={s.img} src={props.photosLarge} ></img>\r\n      }\r\n      </NavLink>\r\n      \r\n      <div>\r\n        {(props.followed === false)\r\n        //   Follow\r\n          ? <button className={s.buttonFollow} disabled={props.isFollowingProgress.includes(props.id)} onClick={() => { \r\n            props.getFollow(props.id)}} >Follow</button>\r\n\r\n          //   UnFollow\r\n          : <button className={s.buttonUnFollow} disabled={props.isFollowingProgress.includes(props.id)}  onClick={() => { \r\n            props.getUnfollow(props.id)}} >Unfollow</button>\r\n           \r\n        }\r\n      </div>\r\n      <div>status: {props.status} </div>\r\n\r\n      <br />\r\n      </div>\r\n)\r\n}\r\n\r\nexport default User\r\n","import React from 'react';\r\nimport Pages from './Pages';\r\nimport Users from './Users';\r\nimport Loader from '../../assets/Img/Loader.gif';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nclass UsersAPIcontainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n       this.props.getUsersThunkCreator(this.props.pageSize, this.props.currentPage)\r\n           }\r\n\r\n    getUsers = (Page) => {\r\n        this.props.getUsersThunkCreator(this.props.pageSize, Page)\r\n        this.props.SetCurrentPage(Page)\r\n        }\r\n\r\n    render() {\r\n             if(this.props.isFetching){\r\n            <Navigate to={'/Login/'} />\r\n            return (\r\n            \r\n            <div>\r\n                <Pages\r\n                    totalUserCount={this.props.totalUserCount}\r\n                    pageSize={this.props.pageSize}\r\n                    SetNumOfPage={this.props.SetNumOfPage}\r\n                    numOfPages={this.props.numOfPages}\r\n                    getUsers={this.getUsers}\r\n                    currentPage={this.props.currentPage}\r\n                    isFetching={this.props.isFetching}\r\n                />\r\n    \r\n                <br />\r\n                {this.props.Users.map(\r\n                    u => <Users\r\n                        id={u.id}\r\n                        name={u.name}\r\n                        uniqueUrlName={u.uniqueUrlName}\r\n                        photosLarge={u.photos.large}\r\n                        photosSmall={u.photos.small}\r\n                        status={u.status}\r\n                        followed={u.followed}\r\n\r\n                        onFollowClick={this.props.onFollow}\r\n                        onUnfollowClick={this.props.onUnfollow}\r\n\r\n                        isFetching={this.props.isFetching}\r\n                        isFollowingProgress={this.props.isFollowingProgress}\r\n\r\n                        ToggleIsFollowingProgress={this.props.ToggleIsFollowingProgress}\r\n                        ToggleIsFetching={this.props.ToggleIsFetching}\r\n\r\n                        getFollow={this.props.getFollow}\r\n                        getUnfollow={this.props.getUnfollow}\r\n                      \r\n                    />)}\r\n            </div>\r\n        )\r\n    }\r\n    else {return(\r\n        <div>\r\n        <img src={Loader} />\r\n        </div>)}\r\n      \r\n    }\r\n}\r\nexport default UsersAPIcontainer\r\n\r\n\r\n\r\n\r\n// let myUsers = (Props) => {\r\n\r\n//      if (Props.Users.length === 0) {\r\n//     //         Props.SetUsers([\r\n//     //         { id: 1, fullName: 'mike', avatar: \"https://shapka-youtube.ru/wp-content/uploads/2021/02/avatarka-dlya-skaypa-dlya-parney.jpg\", follow: true, Status: \"hide\", location: { city: \"ff\", country: \"ff1\" } },\r\n//     //         { id: 2, fullName: 'alex', avatar: \"https://shapka-youtube.ru/wp-content/uploads/2021/02/avatarka-dlya-skaypa-dlya-parney.jpg\", follow: false, Status: \"hide\", location: { city: \"ff\", country: \"ff1\" } },\r\n//     //         { id: 3, fullName: 'stiv', avatar: \"https://shapka-youtube.ru/wp-content/uploads/2021/02/avatarka-dlya-skaypa-dlya-parney.jpg\", follow: true, Status: \"hide\", location: { city: \"ff\", country: \"ff1\" } }\r\n//     //     ])\r\n//         axios.get(\"https://social-network.samuraijs.com/api/1.0/users\").then(Response=>{\r\n//             Props.SetUsers(Response.data.items)\r\n//       })\r\n//      }\r\n//     let UserItem = Props.Users.map(u => <User id={u.id} name={u.name} uniqueUrlName={u.uniqueUrlName} photosLarge={u.photos.large} photosSmall={u.photos.small} status={u.status} followed={u.followed} onFollowClick={Props.onFollow} onUnfollowClick={Props.onUnfollow} />)\r\n\r\n//     return (\r\n//         <div>\r\n//             {UserItem}\r\n//         </div>)\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { FollowAC, SetUserCreator, UnfollowAC,SetTotalUserCountAC,SetCurrentPageAC,SetNumOfPageAC,ToggleIsFetchingAC,ToggleIsFollowingProgressAC,getUsersThunkCreator,getFollow, getUnfollow } from '../../Redux/UsersReducer';\r\nimport UsersAPIcontainer from './UsersAPIcontainer';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({ Users: state.UsersPage.Users,\r\n    pageSize:state.UsersPage.pageSize,\r\n    totalUserCount:state.UsersPage.totalUserCount,\r\n    currentPage:state.UsersPage.currentPage,\r\n    numOfPages:state.UsersPage.numOfPages,\r\n    isFetching:state.UsersPage.isFetching,\r\n    isFollowingProgress:state.UsersPage.isFollowingProgress\r\n    })\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFollow: (UserId) => { dispatch(FollowAC(UserId)) },\r\n    SetUsers: (Users) => { dispatch(SetUserCreator(Users)) },\r\n    onUnfollow: (UserId) => { dispatch(UnfollowAC(UserId)) },\r\n    SetTotalUserCount: (TotalUserCount) => { dispatch(SetTotalUserCountAC(TotalUserCount)) },\r\n    SetCurrentPage: (CurrentPage) => {dispatch(SetCurrentPageAC(CurrentPage)) },\r\n    SetNumOfPage: (CurrentPage) => {dispatch(SetNumOfPageAC(CurrentPage)) },\r\n    ToggleIsFetching: (fetching) => {dispatch(ToggleIsFetchingAC(fetching)) },\r\n    ToggleIsFollowingProgress: (UserID) => {dispatch(ToggleIsFollowingProgressAC(UserID)) },\r\n    getUsersThunkCreator:(pageSize, currentPage)=>{dispatch( getUsersThunkCreator(pageSize, currentPage) )},\r\n    getFollow: (UserID) => {dispatch(getFollow(UserID)) },\r\n    getUnfollow: (UserID) => {dispatch(getUnfollow(UserID)) }\r\n  }\r\n}\r\n\r\nconst withRedirectComponent =withAuthRedirect (UsersAPIcontainer)\r\n\r\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(withRedirectComponent)\r\n\r\nexport default UsersContainer\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    if (props.isLogin) {\r\n        return <header className={s.header}>\r\n            <div className={s.Authorize}>\r\n                <img src={props.avatar} />\r\n                {props.login}\r\n                <text onClick={props.Logout}> Logout</text>\r\n               \r\n               </div>\r\n            <img src='https://e7.pngegg.com/pngimages/555/701/png-clipart-cartoon-penguin-cartoon-penguin-cartoon.png'></img>\r\n        </header>\r\n    }\r\n    else { return (<header className={s.header}>\r\n        <div className={s.Authorize}>\r\n        <NavLink to='login'>Login</NavLink>\r\n        </div>\r\n        <img src='https://e7.pngegg.com/pngimages/555/701/png-clipart-cartoon-penguin-cartoon-penguin-cartoon.png'></img>\r\n    </header>)}\r\n}\r\nexport default Header;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAuth,Logout } from \"../../Redux/AuthReducer\";\r\nimport Header from \"./Header\";\r\nimport s from './HeaderContainer.module.css';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getAuth()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.header}>\r\n                <Header {...this.props} Logout={this.props.Logout} /> </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return (\r\n        {\r\n            email: state.AuthPage.email,\r\n            id: state.AuthPage.id,\r\n            login: state.AuthPage.login,\r\n            isLogin: state.AuthPage.isLogin,\r\n            avatar: state.AuthPage.avatar\r\n        }\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, { getAuth,Logout })(HeaderContainer)","import React from 'react'\r\n\r\nexport function Required(value) {\r\n      if (!value) {return 'Required'}\r\n  //   } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n  //     error = 'Invalid email address';\r\n  //   }\r\n     return undefined\r\n   }\r\n\r\n   export const MaxLengthAC = (max)=>{\r\n      return (value)=>{\r\n        if (value.length > max) {\r\n              return 'MaxLength'\r\n            }\r\n            return undefined\r\n      }\r\n   }\r\n\r\n\r\n// export const MaxLengthAC = (max) => {\r\n//   return (value) => {\r\n//     MaxLength(value, max)\r\n//   }\r\n// }\r\n// function MaxLength(value, max) {\r\n//   if (value.length > max) {\r\n//     return 'MaxLength'\r\n//   }\r\n//   return undefined\r\n// }\r\n\r\n\r\n\r\n  \r\n","import React from 'react'\r\n\r\nexport const Input =({field, form, ...props})=>{\r\n    debugger\r\n    return (\r\n        <div>\r\n    <input {...field} {...props} />\r\n    <p> {form.errors && form.touched[field.name] ? form.errors[field.name] :null}</p>\r\n  </div>)\r\n}\r\n\r\n\r\n// export const Element = (props) => {\r\n//   debugger\r\n//   return (\r\n//     <div>\r\n//        <div>\r\n//       <input {...props}\r\n//         id={props.name}\r\n//         placeholder={props.name}\r\n//         type={props.type}\r\n//         // value={props.formik.values[props.name]}\r\n//         onChange={props.formik.handleChange}\r\n//         onBlur={props.formik.handleBlur}\r\n//       />\r\n//        </ div>\r\n//        <div>\r\n//         {props.formik.errors && props.formik.touched[props.name] ? <p>{props.formik.errors[props.name]}</p> : null}\r\n//        </div>\r\n//        </div>)\r\n// }\r\n\r\n","import React from \"react\";\r\nimport { Formik, Form, Field, useFormik } from 'formik';\r\nimport { MaxLengthAC, Required } from \"../../Utils/Validators/validators\";\r\nimport { Input ,Element} from \"../Common/FormControls/FormsControl\";\r\nimport { getLogin } from \"../../Redux/AuthReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport * as yup from  \"yup\"\r\n\r\n// const LoginForm = (props) => {\r\n\r\n//   const formik = useFormik({\r\n//     initialValues:{ login: '', password: '', rememberMe: '' }, \r\n//     onSubmit:(values,submitProps) =>{\r\n//         props.getLogin(values.login,values.password,values.rememberMe,submitProps.setStatus)\r\n//         },\r\n//     validationSchema: yup.object({\r\n//         login: yup.string().required(\"required\").min(3,\"3\").max(15,\"10\"), \r\n//         password: yup.string().required(\"required\").min(3,\"3\").max(15,\"10\")}) \r\n//                            })\r\n\r\n// return(\r\n// <form onSubmit={formik.handleSubmit}>\r\n// <div><input name=\"login\" type=\"text\"  placeholder=\"login\" value={formik.values.login} \r\n// onChange={formik.handleChange} onBlur={formik.handleBlur}/></div>\r\n// {formik.errors && formik.touched.login ? <p>{formik.errors.login}</p> : null}\r\n// <div><input name=\"password\" type=\"text\"  placeholder=\"password\" value={formik.values.password} \r\n// onChange={formik.handleChange} onBlur={formik.handleBlur}/></div>\r\n// {formik.errors && formik.touched.password ? <p>{formik.errors.password}</p> : null}\r\n// <div><input name=\"rememberMe\" type=\"checkbox\"  placeholder=\"rememberMe\" value={formik.values.rememberMe}/></div>\r\n\r\n// {/* <Element name=\"login\" type=\"text\" formik={formik} value={formik.values.login}/>\r\n// <Element name=\"password\" type=\"text\" formik={formik} value={formik.values.password}/>\r\n// <Element name=\"rememberMe\" type=\"checkbox\" formik={formik} value={formik.values.rememberMe}/> */}\r\n// <button type=\"submit\">Login</button>\r\n// </form>\r\n// )}\r\n\r\n\r\n\r\nconst LoginForm = (props) => (<Formik \r\ninitialValues={{ login: '', password: '', rememberMe: '' }} \r\n\r\nonSubmit={(values,submitProps) =>{\r\nprops.getLogin(values.login,values.password,values.rememberMe,submitProps.setStatus)\r\nsubmitProps.resetForm()}}\r\nvalidationSchema= {yup.object({\r\n           login: yup.string().required(\"required\").min(3,\"3\").max(15,\"10\"), \r\n           password: yup.string().required(\"required\").min(3,\"3\").max(15,\"10\")}) \r\n                              }\r\n>\r\n\r\n\r\n{/*  \r\n.p {margin:0;\r\nmargin-bottom:0.25rem;\r\ncolor:red;\r\nfont-size:0.5rem;} */}\r\n\r\n\r\n\r\n\r\n   {({ errors, touched,status }) => (\r\n<Form>\r\n      <div>\r\n      <Field validate={Required} name=\"login\" placeholder=\"login\" component={Input} />\r\n      </div>\r\n      <div>\r\n      <Field validate={Required} name=\"password\" placeholder=\"password\" component={Input} />\r\n      </div>\r\n      <div>\r\n      <Field name=\"rememberMe\" component= {Input} type=\"checkbox\" />\r\n      </div>\r\n      <div>{ (status) ? status.error[0] :\"\" }</div>\r\n       <div>\r\n      <button type=\"submit\" >Login</button>\r\n      </div>\r\n      </Form>\r\n  )}\r\n</Formik>)\r\n\r\nconst Login = (props) => {\r\n  if  (!props.isLogin){\r\n    return (\r\n        <div>\r\n       <LoginForm getLogin={props.getLogin} props={props}/>\r\n        </div>\r\n    )}\r\n    else {return <Navigate to={'/Profile/'} />}\r\n}\r\n\r\n const mapStateToProps = (state)=> {\r\n    return ({isLogin: state.AuthPage.isLogin              \r\n        })\r\n }\r\n\r\nexport default connect(mapStateToProps,{getLogin})(Login)","import React from \"react\";\nimport './App.css';\n\nimport NavBar from './Components/NavBar/NavBar';\nimport Profile from \"./Components/Profile/Profile\";\nimport DialogsContainer from './Components/Dialogs/DialogsContainer';\nimport {Routes, Route} from \"react-router-dom\";\nimport UsersContainer from \"./Components/Users/UsersContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport Login from \"./Components/Login/Login\";\n\n\nconst App = () => {\n  return (\n    <div className ='app-wrapper'>\n    <HeaderContainer />\n    <NavBar />  \n    <div className='content'>\n\n<Routes>\n<Route path=\"/profile\" element={<Profile />}/>\n<Route path=\"/profile/:Id\" element={<Profile />}/>\n\n<Route path=\"/Messages/*\" element={<DialogsContainer />}/>\n<Route path=\"/Users\" element={<UsersContainer />}/>\n\n<Route path=\"/Login\" element={<Login />}/>\n\n\n\n{/* <Route path=\"/profile\" element={<Profile state={Props.state.ProfilePage} dispatch={Props.dispatch}/>}/>\n<Route path=\"/Messages/:MessageId\" element={<DialogsContainer state={Props.state.MessagePage} dispatch={Props.dispatch}/>}/>\n<Route path=\"/Messages\" element={<DialogsContainer state={Props.state.MessagePage} dispatch={Props.dispatch}/>}/> */}\n</Routes>\n    </div>\n    </div>\n      );\n}\nexport default App;\n\n","import reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Store from \"./Redux/StoreRedux\";\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\n    ReactDOM.render(\n      <BrowserRouter>\n    <Provider store={Store}>\n    <App />\n    </Provider>\n      </BrowserRouter>,\n    document.getElementById('root')\n  );\n\n\nreportWebVitals()\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Pages_name__1TYtu\",\"img\":\"Pages_img__2aRoH\",\"buttonFollow\":\"Pages_buttonFollow__1gOqG\",\"buttonUnFollow\":\"Pages_buttonUnFollow__3_xr1\",\"pageNum\":\"Pages_pageNum__2zZe5\",\"SelectPage\":\"Pages_SelectPage__2nwGV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Users_name__3BQ-S\",\"img\":\"Users_img__bzDj8\",\"buttonFollow\":\"Users_buttonFollow__TGkqg\",\"buttonUnFollow\":\"Users_buttonUnFollow__1B_NM\",\"pageNum\":\"Users_pageNum__2b2Z8\",\"SelectPage\":\"Users_SelectPage__2_uc-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3iv6j\",\"Authorize\":\"Header_Authorize__3xEvr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostsBlock\":\"MyPosts_PostsBlock__1j0M9\",\"Posts\":\"MyPosts_Posts__5rAWN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3KgT5\"};"],"sourceRoot":""}